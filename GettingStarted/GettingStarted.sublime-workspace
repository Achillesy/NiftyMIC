{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"moving_m",
				"moving_mask_object"
			],
			[
				"fixed_m",
				"fixed_mask_object"
			],
			[
				"SetMo",
				"SetMetricMovingMask	(SimpleITK_2D3DRegistration.py)"
			],
			[
				"war",
				"warped_itk"
			],
			[
				"fixed",
				"fixed_mask"
			],
			[
				"fixed_sitk",
				"fixed_sitk_mask_prop"
			],
			[
				"moving_",
				"moving_sitk"
			],
			[
				"GetPi",
				"GetPixelIDValue	(SimpleITK_2D3DRegistration.py)"
			],
			[
				"prin",
				"print_rigid_transformation	(SimpleITK_2D3DRegistration.py)"
			],
			[
				"mov",
				"moving_sitk"
			],
			[
				"fixed_si",
				"fixed_sitk"
			],
			[
				"show_",
				"show_2D_example"
			],
			[
				"sitk",
				"sitkFloat32	(Optimization.py)"
			],
			[
				"overlay",
				"overlay_sitk	(ITK_ReconstructVolume.py)"
			],
			[
				"show",
				"show_sitk_image"
			],
			[
				"dila",
				"dilate_mask"
			],
			[
				"file",
				"filename"
			],
			[
				"Read",
				"ReadImage	(SimpleITK_2D3DRegistration.py)"
			],
			[
				"Up",
				"UpdateLargestPossibleRegion	(ITK_ReconstructVolume.py)"
			],
			[
				"Upda",
				"UpdateLargestPossibleRegion	(ITK_ReconstructVolume.py)"
			],
			[
				"Disc",
				"DisconnectPipeline	(adjointOrientedGaussianInterpolateImageFilter.cpp)"
			],
			[
				"outp",
				"outputPtr"
			],
			[
				"OutputI",
				"OutputIterator"
			],
			[
				"adder",
				"adderOutIt"
			],
			[
				"Get",
				"GetOutput"
			],
			[
				"ImageRegionIter",
				"ImageRegionIteratorWithIndex"
			],
			[
				"SetIn",
				"SetInput1"
			],
			[
				"GetRe",
				"GetRequestedRegion"
			],
			[
				"std",
				"std::endl"
			],
			[
				"valid",
				"validThreads"
			],
			[
				"Copy",
				"CopyInformation	(Optimization.py)"
			],
			[
				"Finite",
				"FiniteDifference"
			],
			[
				"Lap",
				"Laplace"
			],
			[
				"DTD_",
				"DTD_comp_type"
			],
			[
				"Diff",
				"DiffQuot"
			],
			[
				"_DTD",
				"_DTD"
			],
			[
				"_DTD_",
				"_DTD_diffquot"
			],
			[
				"type",
				"reg_type"
			],
			[
				"_ker",
				"_kernel_Dx"
			],
			[
				"_get_for",
				"_get_forward_diff_x_kernel"
			],
			[
				"dir_",
				"dir_input"
			],
			[
				"fetal",
				"fetalbrain"
			],
			[
				"fetalbrain_re",
				"fetalbrain_registered"
			],
			[
				"input_",
				"input_stack_types_available"
			],
			[
				"convert",
				"convert_itk_to_sitk_image	(SimpleITKHelper.py)"
			],
			[
				"image_",
				"image_sitk"
			],
			[
				"image",
				"image_sitk"
			],
			[
				"imag",
				"image_itk"
			],
			[
				"Py",
				"PyBuffer"
			],
			[
				"dir",
				"direction_itk"
			],
			[
				"dire",
				"direction_sitk"
			],
			[
				"HR",
				"HR_volume_itk"
			],
			[
				"_get",
				"_get_HR_image_from_array_vec"
			],
			[
				"_TK",
				"_TK0_SPD_grad"
			],
			[
				"_T",
				"_TK0_SPD_grad"
			],
			[
				"GetA",
				"GetArrayFromImage"
			],
			[
				"cost",
				"cost_nda"
			],
			[
				"cost_",
				"cost_image"
			],
			[
				"sum_AT",
				"sum_ATAx_alphax"
			],
			[
				"sum_ATy",
				"sum_ATy_itk"
			],
			[
				"HR_",
				"HR_volume"
			],
			[
				"SetInp",
				"SetInput"
			],
			[
				"_su",
				"_sum_ATy"
			],
			[
				"_sum",
				"_sum_ATA"
			],
			[
				"sum",
				"sum_ATAx"
			],
			[
				"GetDi",
				"GetDimension"
			],
			[
				"Update",
				"UpdateLargestPossibleRegion"
			],
			[
				"_fil",
				"_filter_oriented_Gaussian"
			],
			[
				"_Fil",
				"_filter_oriented_Gaussian_interpolator"
			],
			[
				"Generate",
				"GenerateInputRequestedRegion"
			],
			[
				"_filter_o",
				"_filter_oriented_Gaussian"
			],
			[
				"_filt",
				"_filter_adjoint_oriented_Gaussian"
			],
			[
				"Set",
				"SetAlpha"
			],
			[
				"_fit",
				"_filter_oriented_Gaussian_interpolator"
			],
			[
				"overla",
				"overlay_itk=tmp"
			],
			[
				"ATA_k",
				"ATA_k_slice_itk"
			],
			[
				"slice",
				"slice0"
			],
			[
				"AK",
				"ATA_k_slice_itk"
			],
			[
				"_AT",
				"_ATA"
			],
			[
				"Value",
				"ValueError"
			],
			[
				"conver",
				"convert_sitk_to_itk_image"
			],
			[
				"for",
				"for (edited)	(Edited) For Loop"
			],
			[
				"sl",
				"slice"
			],
			[
				"get_itk",
				"get_itk_direction_from_sitk_image	(SimpleITKHelper.py)"
			],
			[
				"pixl",
				"pixel_type"
			],
			[
				"_fi",
				"_filter_oriented_Gaussian"
			],
			[
				"_filter_",
				"_filter_adjoint_oriented_Gaussian"
			],
			[
				"SetSi",
				"SetSize	(itkAdjointOrientedGaussianInterpolateImageFilter.hxx)"
			],
			[
				"_f",
				"_filter_adjoint_oriented_Gaussian"
			],
			[
				"GetO",
				"GetOrigin	(ITK_BlurringOperator_Adjoint.py)"
			],
			[
				"SetOutput",
				"SetOutputParametersFromImage	(itkAdjointOrientedGaussianInterpolateImageFilter.h)"
			],
			[
				"_filter",
				"_filter_oriented_Gaussian"
			],
			[
				"_filter_oriented_Gaussian_",
				"_filter_oriented_Gaussian_interpolator"
			],
			[
				"Cov_",
				"Cov_HR_coord"
			],
			[
				"pixel",
				"pixel_type"
			],
			[
				"get_s",
				"get_slices"
			],
			[
				"set_",
				"set_initial_HR_volume"
			],
			[
				"reconst",
				"reconstruction_manager"
			],
			[
				"_get_P",
				"_get_PSF_covariance_matrix_HR_volume_coordinates"
			],
			[
				"filenam",
				"filename_HR_volume"
			],
			[
				"from",
				"from_nifti	(Stack.py)"
			],
			[
				"color",
				"colorbar	(getAnisotropicDerivativeFilter.m)"
			],
			[
				"norm",
				"norm_diff_TK0"
			],
			[
				"recon",
				"reconstruction_TK0_nda"
			],
			[
				"f_TK1_SP",
				"f_TK1_SPD_hess_p"
			],
			[
				"DTD",
				"DTDATg"
			],
			[
				"ATA",
				"ATAATg"
			],
			[
				"op_AT",
				"op_ATg_vec"
			],
			[
				"reconstr",
				"reconstruction_nda"
			],
			[
				"Dfy",
				"Dfy_x"
			],
			[
				"Dbx",
				"Dbx_x"
			],
			[
				"ker",
				"kernel_L"
			],
			[
				"get_for",
				"get_forward_difference_x_kernel"
			],
			[
				"get",
				"getATx"
			],
			[
				"get_back",
				"get_backward_difference_x_kernel"
			],
			[
				"op_",
				"op_ATg"
			],
			[
				"time",
				"time_elapsed"
			],
			[
				"reco",
				"reconstruction_TK1_nda"
			],
			[
				"optimi",
				"optimization"
			],
			[
				"recons",
				"reconstruction_nda"
			],
			[
				"obser",
				"observed_nda"
			],
			[
				"get_k",
				"get_forward_difference_x_kernel"
			],
			[
				"nda_",
				"nda_dx"
			],
			[
				"GetIm",
				"GetImageFromArray"
			],
			[
				"cmap",
				"cmap=\"Greys_r	(SimpleITK_Blurring.py)"
			],
			[
				"k",
				"kernel_dx"
			],
			[
				"Fet",
				"FetalBrain_reconstruction_4stacks"
			],
			[
				"z_",
				"z_interval"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkAdjointOrientedGaussianInterpolateImageFilter.h",
			"settings":
			{
				"buffer_size": 20629,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cpp/MyAdjointOrientedGaussian/source/adjointOrientedGaussianInterpolateImageFilter.cpp",
			"settings":
			{
				"buffer_size": 16537,
				"line_ending": "Unix"
			}
		},
		{
			"file": "cpp/MyAdjointOrientedGaussian/test/adjointOrientedGaussianInterpolateImageFilter_UnitTests.cpp",
			"settings":
			{
				"buffer_size": 34276,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageFilterBase/include/itkBinaryFunctorImageFilter.hxx",
			"settings":
			{
				"buffer_size": 10034,
				"line_ending": "Unix"
			}
		},
		{
			"file": "SimpleITK_2D3DRegistration.py",
			"settings":
			{
				"buffer_size": 25353,
				"line_ending": "Unix"
			}
		},
		{
			"file": "DataPreprocessing.py",
			"settings":
			{
				"buffer_size": 9734,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesFromPhysicalShift.h",
			"settings":
			{
				"buffer_size": 3557,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesEstimator.h",
			"settings":
			{
				"buffer_size": 11688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/wrapping/itkOptimizerParameterScalesEstimator.wrap",
			"settings":
			{
				"buffer_size": 318,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/mebner/development/ITK/ITK/Wrapping/WrapITKTypes.cmake",
			"settings":
			{
				"buffer_size": 12367,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Optimization.py",
			"settings":
			{
				"buffer_size": 57641,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ITK_BlurringOperator_Adjoint.py",
			"settings":
			{
				"buffer_size": 61146,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ITK_BlurringOperator.py",
			"settings":
			{
				"buffer_size": 101903,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 27.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"package inst",
				"Package Control: Install Package"
			],
			[
				"package control packag",
				"Package Control: Install Package"
			],
			[
				"package control add pac",
				"Package Control: Advanced Install Package"
			],
			[
				"package con",
				"Package Control: Remove Repository"
			],
			[
				"",
				"Package Control: Add Repository"
			]
		],
		"width": 424.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/test/adjointOrientedGaussianInterpolateImageFilter_UnitTests.cpp",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkAdjointOrientedGaussianInterpolateImageFilter.hxx",
		"/Users/mebner/development/ITK/ITK/Modules/Registration/Common/include/itkNormalizedMutualInformationHistogramImageToImageMetric.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/SimpleITK_NiftyReg_FLIRT.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_ReconstructVolume.py",
		"/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/include/itkOptimizerParameterScalesEstimator.h",
		"/Users/mebner/development/ITK/ITK/Modules/Registration/Common/wrapping/itkHistogramImageToImageMetric.wrap",
		"/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/wrapping/itkRegistrationParameterScalesEstimator.wrap",
		"/Users/mebner/development/ITK/ITK/Wrapping/WrapITKTypes.cmake",
		"/Users/mebner/development/ITK/ITK/Wrapping/Generators/Python/CMakeLists.txt",
		"/private/var/folders/t8/4cbhcmtj071b6_19sk5lr8fr0000gn/T/Modules_Remote_SmoothingRecursiveYvvGaussianFilter.remote_Before_ea0402e44ec2476ec96c45cfcad5e7d4b5447414.cmake",
		"/Users/mebner/development/ITK/ITK/Modules/Remote/SmoothingRecursiveYvvGaussianFilter.remote.cmake",
		"/Users/mebner/development/ITK/runCmake.sh",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_Registration.py",
		"/Users/mebner/development/ITK/ITK/Modules/Registration/Common/include/itkHistogramImageToImageMetric.h",
		"/Users/mebner/development/ITK/ITK/Modules/Registration/Common/wrapping/itkNormalizedCorrelationImageToImageMetric.wrap",
		"/Users/mebner/development/ITK/ITK/Modules/Registration/Common/wrapping/itkNormalizedMutualInformationHistogramImageToImageMetric.wrap",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_BlurringOperator.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_BlurringOperator_Adjoint.py",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkImageSource.hxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/Optimization.py",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageIntensity/include/itkAddImageFilter.h",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkInPlaceImageFilter.hxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/Stack.py",
		"/Users/mebner/UCL/UCL/Teaching/2016_IPMI/solutions/exercise_2.py",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkResampleImageFilter.hxx",
		"/Users/mebner/UCL/UCL/Publications/2016_IPEM/Presentation/slides.tex",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/SimpleITKHelper.py",
		"/Users/mebner/UCL/UCL/Other Toolkits/IRTK_BKainz/fetal_brain/brain_0_2_3_6/runTestDataset.sh",
		"/Users/mebner/development/ITK/ITK/Modules/Segmentation/Watersheds/include/itkWatershedSegmenter.hxx",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkWarpImageFilter.hxx",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkImageToImageFilter.hxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/results/recon/v2_20160310/fetalbrain_TK1recon_DTD.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/results/recon/v2_20160310/fetalbrain_TK1recon_Laplace.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/results/recon/v2_20160310/fetalbrain_TK0recon.txt",
		"/Users/mebner/UCL/UCL/Teaching/2016_IPMI/solutions/exercise_1.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/out.txt",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/binarySearch.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/DP.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/test_adjoint.m",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/src/itkImageIORegion.cxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/SimpleITK_Blurring.py",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkImageToImageFilter.h",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkImageToImageFilterCommon.h",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkResampleImageFilter.h",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/cw01_run.m",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/doc/diff.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/doc/doxyfile",
		"/Users/mebner/UCL/UCL/Courses/Research Computing with C++/courseworks/02_Conways Game of Life/documentation/doxygen/Doxyfile",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_Optimization",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/getAnisotropicDerivativeFilter.m",
		"/Users/mebner/Documents/TU Wien/Diplomarbeit_AIT/Matlab/pressureSeparation/computePres_AIT.m",
		"/Users/mebner/.zshrc",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/MHfunc.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/MHex2.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/MixGaussMH.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/PosteriorMH.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/Gibbsex2.m",
		"/Users/mebner/Documents/TU Wien/Diplomarbeit_AIT/SNE-Artikel/Groundwater Pollution (Summerschool)/Presentation/slides.tex",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/Miller.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/getDD.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/runGradLinBlur.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/SD1.m",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/data/2D_Man_1024.tiff",
		"/Users/mebner/Downloads/phantom3d/phantom3d.m",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/matlab/generateSheppLoganPhantom3D.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/getLHSAugmentedLinearEquationTK0.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/ATA.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/getBlurredNoisyImage.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/ToyDeblur2D.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/Courseworks/cw01/getKernel2D.m",
		"/Users/mebner/development/ITK/ITK/Modules/Core/Common/include/itkProcessObject.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/include/MyITKImageHelper.tpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/CMakeLists.txt",
		"/Users/mebner/development/ITK/ITK/Documentation/Migration/ImageToImageFilterVerifyInputs.xml",
		"/Users/mebner/development/ITK/ITK/Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h",
		"/Users/mebner/development/ITK/ITK/Modules/Remote/SmoothingRecursiveYvvGaussianFilter/include/itkRecursiveLineYvvGaussianImageFilter.h",
		"/Users/mebner/development/ITK/ITK/Modules/Remote/SmoothingRecursiveYvvGaussianFilter/include/itkRecursiveLineYvvGaussianImageFilter.hxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/source/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/build/CMakeCache.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/build/foo.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/build/toto.txt",
		"/Users/mebner/development/NiftyMIDAS/NiftyMIDAS-build/NiftySim-src/source/tledHelper.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK-Examples/DoDataParallelThreading/main.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK-Examples/DoDataParallelThreading/CMakeLists.txt",
		"/Users/mebner/development/NiftyMIDAS/NiftyMIDAS/README.txt",
		"/Users/mebner/development/NiftyMIDAS/runCmake.sh",
		"/Users/mebner/development/ITK/ITK/Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.hxx",
		"/Users/mebner/UCL/UCL/Courses/Research Computing with C++/courseworks/02_Conways Game of Life/source/main.cc",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/include/MyITKImageHelper.h",
		"/Users/mebner/development/NiftyMIDAS/NiftyMIDAS/CMake/niftkMacroBuildCLI.cmake",
		"/Users/mebner/development/Qt5/README",
		"/Users/mebner/development/NiftyMIDAS/NiftyMIDAS-build/out.txt",
		"/Users/mebner/development/NiftyMIDAS/NiftyMIDAS/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyAdjointOrientedGaussian/build/out.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK-FilterExamples_MariaZuluaga/itkHessian3DToOrientationSimilarityMetricFilter.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK-FilterExamples_MariaZuluaga/itkBrainMaskFromCTFilter.txx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK-FilterExamples_MariaZuluaga/itkHessian3DToOrientationSimilarityMetricFilter.txx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/ResampleImageFilter.cxx",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/ImageFactory.h",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/wrapping/itkResampleImageFilter.wrap",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/test/adjointOrientedGaussianInterpolateImageFilter_UnitTests.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/MyITKImageHelper.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/MyITKImageHelper.cpp",
		"/Users/mebner/development/ITK/ITK/Modules/Core/ImageFunction/wrapping/itkOrientedGaussianInterpolateImageFunction.wrap",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/adjointOrientedGaussianInterpolateImageFilter.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyOrientedGaussian/source/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyOrientedGaussian/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyOrientedGaussian/source/resampleImageFilter.cpp",
		"/Users/mebner/development/valgrind-3.11.0/README.aarch64",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/MyITKImageHelper.tpp",
		"/Users/mebner/UCL/UCL/Courses/Research Computing with C++/courseworks/02_Conways Game of Life/test/main_UnitTests.cc",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/test/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Courses/Research Computing with C++/courseworks/02_Conways Game of Life/CMakeLists.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/MyTemplateClassExample.tpp",
		"/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/wrapping/itkAdjointOrientedGaussianInterpolateImageFilter.wrap",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/ImageFactory_old.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/ImageFactory.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/ImageFactory.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/MyITKImageHelper.cpp",
		"/usr/local/fsl/bin/fslhd",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/resampleImageFilter.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/itkImageHelper.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/itkImageHelper.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/source/ImageHelper.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/ITK_Examples/MyFunctions/include/ImageHelper.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"*.h",
			"",
			"*.py",
			"",
			"*hxx",
			"hxx",
			"",
			"*.hxx",
			"*filter*.cxx",
			"*.cXX",
			"*.cpp",
			"*filter*.cpp",
			"",
			"%py",
			"",
			"*cmake",
			"*wrap",
			"*txt",
			"",
			"*h",
			"*py",
			"",
			"*Lists.txt",
			"*txt",
			"",
			"out.txt",
			"*.txt",
			"",
			"*Lists.txt",
			"*.txt",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"image_IO_type",
			"metric",
			"ITKM",
			"ITK_M",
			"TMetric",
			"metric",
			"ITKM",
			"itkm",
			"metric",
			"template",
			"filter",
			"setscalesestimator",
			"1",
			"show_it",
			"image_type",
			"SetInput",
			"fixed",
			"fixed_itk",
			"moving_itk",
			"get_sitk_rigid_registration_transform_3D",
			"oriented",
			"fixed_mask",
			"fixed_sitk_mask_prop",
			"moving_3D",
			"fixed_3D",
			"2D",
			"cross",
			"fixed",
			"filename_3D",
			"image_type_2D",
			"Optimize",
			"st",
			"sl",
			"st",
			"self._alpha",
			"m_OutputPtrThread[i]",
			"output",
			"outpu",
			"setoutput(*",
			"setoutput",
			"setoutput(",
			"SetOutputImageValues",
			"SetOutputImage",
			"SetOutput",
			"output",
			"outputPtr",
			".",
			"ImageType",
			"AddImageFilter",
			"itk::",
			"TOutputImage",
			"OutputImageType",
			"add",
			"setbuffer",
			"setbufferedregion",
			"buffered",
			"GetOutput",
			"OutputImagePointer",
			"numberOfThreads",
			"generatedata",
			"m_outputPtrThread",
			"multithreader",
			"multithreader\n",
			"OutputImagePointer",
			"outputPtrThread",
			"10",
			",   f",
			" =",
			"Chosen difference",
			"=",
			"_DTD_type",
			"DTD_type",
			"set_DTD_computation",
			"set_DTD_type",
			"self._DTD",
			"_DTD_laplacian",
			"_DTD_diffquot",
			"results/recon",
			"results",
			"_DTD",
			"Functions used for",
			"## return",
			"return grad",
			"0",
			"op0",
			"x",
			"kernel_Dx_adj",
			"x",
			"1",
			"self._k",
			"self._",
			"_get_forward_diff_x_kernel",
			"getDTDx",
			"J0",
			"alpha*x",
			"op_sum_ATy_itk",
			"op(",
			"op0",
			"op0_sum_ATy_itk",
			"op_",
			"_op",
			"TK1",
			"return kernel kernel",
			"regularization",
			"TK0",
			"f_TK0_hess_p",
			"f_TK0_grad",
			"f_TK0",
			"regularization",
			"_regularization",
			"mode",
			"*",
			"erence",
			"x",
			"convolveifference",
			"_D",
			"getDx",
			"_Dx",
			"get_",
			"dim",
			"[(z,)y,x]",
			"dim d",
			"cast",
			"max_iter",
			"solver",
			"HR_volume_Kainz",
			"ITK image",
			"_get_HR_image_from_array_vec"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ComponentType",
			"InputImageRegionType",
			"SliceStack",
			"",
			"mebner",
			"${mask1}",
			"${mask3}",
			"${mask2}",
			"${mask3}",
			"${mask2}",
			"mask01",
			"${ana3}",
			"${ana2}",
			"${ana1}",
			"SurfaceBased",
			"dFRE",
			"FRE",
			"dFRE",
			"PointBasedTrafo2",
			"computeRegistration",
			"mx",
			"**",
			"SurfaceBasedTrafo",
			"mx",
			"dMSE",
			"SurfaceBasedTrafo"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageGrid/include/itkAdjointOrientedGaussianInterpolateImageFilter.h",
					"settings":
					{
						"buffer_size": 20629,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "cpp/MyAdjointOrientedGaussian/source/adjointOrientedGaussianInterpolateImageFilter.cpp",
					"settings":
					{
						"buffer_size": 16537,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										5238,
										5238
									],
									[
										12464,
										12464
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								108,
								108
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "cpp/MyAdjointOrientedGaussian/test/adjointOrientedGaussianInterpolateImageFilter_UnitTests.cpp",
					"settings":
					{
						"buffer_size": 34276,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/mebner/development/ITK/ITK/Modules/Filtering/ImageFilterBase/include/itkBinaryFunctorImageFilter.hxx",
					"settings":
					{
						"buffer_size": 10034,
						"regions":
						{
						},
						"selection":
						[
							[
								630,
								630
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "SimpleITK_2D3DRegistration.py",
					"settings":
					{
						"buffer_size": 25353,
						"regions":
						{
						},
						"selection":
						[
							[
								8128,
								8128
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2099.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "DataPreprocessing.py",
					"settings":
					{
						"buffer_size": 9734,
						"regions":
						{
						},
						"selection":
						[
							[
								7520,
								7520
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2819.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesFromPhysicalShift.h",
					"settings":
					{
						"buffer_size": 3557,
						"regions":
						{
						},
						"selection":
						[
							[
								1609,
								1609
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 86.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesEstimator.h",
					"settings":
					{
						"buffer_size": 11688,
						"regions":
						{
						},
						"selection":
						[
							[
								7625,
								7625
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2175.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/mebner/development/ITK/ITK/Modules/Numerics/Optimizersv4/wrapping/itkOptimizerParameterScalesEstimator.wrap",
					"settings":
					{
						"buffer_size": 318,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/mebner/development/ITK/ITK/Wrapping/WrapITKTypes.cmake",
					"settings":
					{
						"buffer_size": 12367,
						"regions":
						{
						},
						"selection":
						[
							[
								6824,
								6824
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2510.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 10,
					"file": "Optimization.py",
					"settings":
					{
						"buffer_size": 57641,
						"regions":
						{
						},
						"selection":
						[
							[
								49034,
								49034
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17682.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "ITK_BlurringOperator_Adjoint.py",
					"settings":
					{
						"buffer_size": 61146,
						"regions":
						{
						},
						"selection":
						[
							[
								53606,
								53606
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 18019.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "ITK_BlurringOperator.py",
					"settings":
					{
						"buffer_size": 101903,
						"regions":
						{
						},
						"selection":
						[
							[
								24750,
								24750
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9170.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.467367017998,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 289.0
	},
	"output.find_results":
	{
		"height": 246.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"registrationparameterscalesfromphysicalshift",
				"ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesFromPhysicalShift.h"
			],
			[
				"smoothingrecursiveyvvremotecmake",
				"ITK/Modules/Remote/SmoothingRecursiveYvvGaussianFilter.remote.cmake"
			],
			[
				"registrationparam",
				"ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesEstimator.h"
			],
			[
				"registrationphysi",
				"ITK/Modules/Numerics/Optimizersv4/include/itkRegistrationParameterScalesFromPhysicalShift.h"
			],
			[
				"itkhistogramim",
				"ITK/Modules/Registration/Common/include/itkHistogramImageToImageMetric.h"
			],
			[
				"normalizedmutual",
				"ITK/Modules/Registration/Common/include/itkNormalizedMutualInformationHistogramImageToImageMetric.h"
			],
			[
				"itkbinaryfunct",
				"ITK/Modules/Filtering/ImageFilterBase/include/itkBinaryFunctorImageFilter.hxx"
			],
			[
				"addimagefilter.",
				"ITK/Modules/Filtering/ImageIntensity/include/itkAddImageFilter.h"
			],
			[
				"inplag",
				"ITK/Modules/Core/Common/include/itkInPlaceImageFilter.hxx"
			],
			[
				"warpimage",
				"ITK/Modules/Filtering/ImageGrid/include/itkWarpImageFilter.hxx"
			],
			[
				"imagesourc",
				"ITK/Modules/Core/Common/include/itkImageSource.hxx"
			],
			[
				"imagetoimag",
				"ITK/Modules/Core/Common/include/itkImageToImageFilter.hxx"
			],
			[
				"resampiefilter.h",
				"ITK/Modules/Filtering/ImageGrid/include/itkResampleImageFilter.hxx"
			],
			[
				"imagetoimagefilterco",
				"ITK/Modules/Core/Common/include/itkImageToImageFilterCommon.h"
			],
			[
				"imagetoima",
				"ITK/Modules/Core/Common/include/itkImageToImageFilter.h"
			],
			[
				"itkresa",
				"ITK/Modules/Filtering/ImageGrid/include/itkResampleImageFilter.h"
			],
			[
				"itkresamp",
				"ITK/Modules/Filtering/ImageGrid/include/itkResampleImageFilter.hxx"
			],
			[
				"imageioregion.",
				"ITK/Modules/Core/Common/src/itkImageIORegion.cxx"
			],
			[
				"imagesou",
				"ITK/Modules/Core/Common/include/itkImageSource.hxx"
			],
			[
				"itk_bl",
				"GettingStarted/ITK_BlurringOperator.py"
			],
			[
				"gibe",
				"Inverse Problems in Imaging/LectureExamples/Gibbsex2.m"
			],
			[
				"posterior",
				"Inverse Problems in Imaging/LectureExamples/PosteriorMH.m"
			],
			[
				"mixgaus",
				"Inverse Problems in Imaging/LectureExamples/MixGaussMH.m"
			],
			[
				"mhex",
				"Inverse Problems in Imaging/LectureExamples/MHex2.m"
			],
			[
				"mhf",
				"Inverse Problems in Imaging/LectureExamples/MHfunc.m"
			],
			[
				"getan",
				"Inverse Problems in Imaging/Courseworks/cw01/getAnisotropicDerivativeFilter.m"
			],
			[
				"getdd",
				"Inverse Problems in Imaging/Courseworks/cw01/getDD.m"
			],
			[
				"",
				"Inverse Problems in Imaging/Courseworks/cw01/cw01_run.m"
			],
			[
				"rungrad",
				"Inverse Problems in Imaging/LectureExamples/runGradLinBlur.m"
			],
			[
				"sd1m",
				"Inverse Problems in Imaging/LectureExamples/SD1.m"
			],
			[
				"sd1",
				"GettingStarted/data/2D_Man_1024.tiff"
			],
			[
				"binary",
				"Inverse Problems in Imaging/Courseworks/cw01/binarySearch.m"
			],
			[
				"dp.m",
				"Inverse Problems in Imaging/LectureExamples/DP.m"
			],
			[
				"miller",
				"Inverse Problems in Imaging/LectureExamples/Miller.m"
			],
			[
				"augm",
				"Inverse Problems in Imaging/Courseworks/cw01/getLHSAugmentedLinearEquationTK0.m"
			],
			[
				"ata",
				"Inverse Problems in Imaging/Courseworks/cw01/ATA.m"
			],
			[
				"test_ad",
				"Inverse Problems in Imaging/Courseworks/cw01/test_adjoint.m"
			],
			[
				"getbl",
				"Inverse Problems in Imaging/Courseworks/cw01/getBlurredNoisyImage.m"
			],
			[
				"getk",
				"Inverse Problems in Imaging/Courseworks/cw01/getKernel2D.m"
			],
			[
				"blurrin",
				"GettingStarted/SimpleITK_Blurring.py"
			],
			[
				"run",
				"Inverse Problems in Imaging/Courseworks/cw01/cw01_run.m"
			],
			[
				"o",
				"Optimization.py"
			],
			[
				"itkmultithreader",
				"Modules/Core/Common/src/itkMultiThreader.cxx"
			],
			[
				"multithread",
				"Modules/Core/Common/include/itkMultiThreader.h"
			],
			[
				"imagetoimagefilt",
				"Modules/Core/Common/include/itkImageToImageFilter.hxx"
			],
			[
				"imagetoimagefil",
				"Modules/Core/Common/include/itkImageToImageFilter.h"
			],
			[
				"imagetoimage",
				"Documentation/Migration/ImageToImageFilterVerifyInputs.xml"
			],
			[
				"processobject",
				"Modules/Core/Common/include/itkProcessObject.h"
			],
			[
				"resampleimagefilter.h",
				"Modules/Filtering/ImageGrid/include/itkResampleImageFilter.h"
			],
			[
				"resampleimagefilter.hx",
				"Modules/Filtering/ImageGrid/include/itkResampleImageFilter.hxx"
			],
			[
				"orientedgaussian",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h"
			],
			[
				"imagesource",
				"Modules/Core/Common/include/itkImageSource.hxx"
			],
			[
				"resampleimagefilterhx",
				"Modules/Filtering/ImageGrid/include/itkResampleImageFilter.hxx"
			],
			[
				"wrapitk",
				"Wrapping/WrapITKTypes.cmake"
			],
			[
				"orientedgauss",
				"Modules/Core/ImageFunction/wrapping/itkOrientedGaussianInterpolateImageFunction.wrap"
			],
			[
				"adjointoriented",
				"Modules/Filtering/ImageGrid/wrapping/itkAdjointOrientedGaussianInterpolateImageFilter.wrap"
			],
			[
				"itkorientedimage",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h"
			],
			[
				"itkorientedgau",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.hxx"
			],
			[
				"resampl",
				"Examples/Filtering/ResampleImageFilter.cxx"
			],
			[
				"warpvec",
				"Modules/Filtering/ImageGrid/include/itkWarpVectorImageFilter.h"
			],
			[
				"orientedg",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h"
			],
			[
				"resampleimagefilter",
				"Modules/Filtering/ImageGrid/include/itkResampleImageFilter.h"
			],
			[
				"edit",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction_edit.hxx"
			],
			[
				"oriented",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.hxx"
			],
			[
				"h.kw",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h.kws"
			],
			[
				"h.kws",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h.kws"
			],
			[
				"fixeda",
				"Modules/Core/Common/include/itkFixedArray.h"
			],
			[
				"itkma",
				"Modules/Core/Common/include/itkMacro.h"
			],
			[
				"orientedgau",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h"
			],
			[
				"gaussianinterpol",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction.h"
			],
			[
				"orientedgas",
				"Modules/Core/ImageFunction/include/itkOrientedGaussianInterpolateImageFunction.h"
			],
			[
				"fullco",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunctionFullCovariance.h"
			],
			[
				"gauss3",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction3D.h"
			],
			[
				"itkgau",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction.h"
			],
			[
				"itkgaussianinerpola",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction.hxx"
			],
			[
				"itkgaussianinterpolateimagefunction",
				"Modules/Core/ImageFunction/include/itkGaussianInterpolateImageFunction.h"
			],
			[
				"functionba",
				"Modules/Core/Common/include/itkFunctionBase.h"
			],
			[
				"imagefun",
				"Modules/Core/ImageFunction/include/itkImageFunction.h"
			],
			[
				"interpolateima",
				"Modules/Core/ImageFunction/include/itkInterpolateImageFunction.h"
			],
			[
				"itknearestneighborinterpolateimagefunction",
				"Modules/Core/ImageFunction/include/itkNearestNeighborInterpolateImageFunction.h"
			],
			[
				"irtktemporalhomogeneoustransformation.cc",
				"fetalReconstruction/source/IRTKSimple2/packages/transformation/src/irtkTemporalHomogeneousTransformation.cc"
			],
			[
				"irtkmatrix.h",
				"fetalReconstruction/source/IRTKSimple2/geometry++/include/irtkMatrix.h"
			],
			[
				"irtkmatri",
				"fetalReconstruction/source/IRTKSimple2/geometry++/include/irtkMatrix.h"
			],
			[
				"irtkm",
				"fetalReconstruction/source/IRTKSimple2/geometry++/include/irtkMatrix.h"
			],
			[
				"irtkmat",
				"fetalReconstruction/source/IRTKSimple2/geometry++/include/irtkMatrix.h"
			],
			[
				"irtktemporalhomogeneoustransformation",
				"fetalReconstruction/source/IRTKSimple2/packages/transformation/src/irtkTemporalHomogeneousTransformation.cc"
			],
			[
				"irtkmatr",
				"fetalReconstruction/source/IRTKSimple2/geometry++/include/irtkMatrix.h"
			],
			[
				"lhomogeneoustransformation.cc",
				"source/IRTKSimple2/packages/transformation/src/irtkTemporalHomogeneousTransformation.cc"
			],
			[
				"irtkmatrix",
				"source/IRTKSimple2/geometry++/src/irtkMatrix.cc"
			],
			[
				"pointbasedtrafo",
				"research-computing-with-cpp-demo/Code/PointBasedReg/PointBasedTrafo.cc"
			],
			[
				"readfil",
				"research-computing-with-cpp-demo/Code/PointBasedReg/readFileIntoMatrix.cc"
			],
			[
				"pointbasedregcmake",
				"research-computing-with-cpp-demo/Code/PointBasedReg/CMakeLists.txt"
			],
			[
				"cmake",
				"PointBasedReg/CMakeLists.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 322.0,
	"status_bar_visible": true
}
