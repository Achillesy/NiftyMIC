{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"affine_m",
				"affine_matrix_initial_guess"
			],
			[
				"spac",
				"spacing_initial_guess\tstatement"
			],
			[
				"affine_matr",
				"affine_matrix_initial_estimate"
			],
			[
				"origin",
				"origin_sitk"
			],
			[
				"direction",
				"direction_sitk"
			],
			[
				"get_sitk",
				"get_sitk_affine_transform_from_sitk_image\t(Registration.py)"
			],
			[
				"spacing_new",
				"spacing_new_uniform"
			],
			[
				"fla",
				"flatten"
			],
			[
				"affine_",
				"affine_matrix_sitk"
			],
			[
				"rigid_",
				"rigid_registration_transform_3D_sitk"
			],
			[
				"rigid_or",
				"rigid_or_affine_transform_sitk\tparam"
			],
			[
				"Simil",
				"Similarity3DTransform\tclass"
			],
			[
				"set_ini",
				"set_centered_transform_initializer\t(preprocessFiles.py)"
			],
			[
				"pa",
				"parameters\tstatement"
			],
			[
				"registration",
				"registration_transforms"
			],
			[
				"spacing_",
				"spacing_stack"
			],
			[
				"stack_s",
				"stack_scaled_sitk"
			],
			[
				"GetS",
				"GetSpacing\t(preprocessFiles.py)"
			],
			[
				"Phy",
				"PhysicalShift\t(RegistrationSimpleITK.py)"
			],
			[
				"registra",
				"registration_transforms"
			],
			[
				"Matt",
				"MattesMutualInformation\t(RegistrationSimpleITK.py)"
			],
			[
				"inplan",
				"inplane_registration"
			],
			[
				"Mattes",
				"MattesMutualInformation\t(RegistrationITK.py)"
			],
			[
				"para",
				"parameters_pos"
			],
			[
				"affine_ce",
				"affine_centering_sitk"
			],
			[
				"B",
				"BSpline\t(preprocessFiles.py)"
			],
			[
				"regi",
				"registration_transforms"
			],
			[
				"stack_c",
				"stack_corruped_affine_transform_sitk"
			],
			[
				"stack_simult",
				"stack_simulated_sitk"
			],
			[
				"from_",
				"from_sitk_image\t(preprocessFiles.py)"
			],
			[
				"Cop",
				"CopyInformation\t(preprocessFiles.py)"
			],
			[
				"GetImag",
				"GetImageFromArray\t(preprocessFiles.py)"
			],
			[
				"for",
				"for (edited)\t(Edited) For Loop"
			],
			[
				"stack_",
				"stack_corrupted_2_sitk\tstatement"
			],
			[
				"stack_co",
				"stack_corrupted_sitk\tstatement"
			],
			[
				"get_sit",
				"get_sitk_image_origin_from_sitk_affine_transform\t(Registration.py)"
			],
			[
				"angle",
				"angle_z"
			],
			[
				"angl",
				"angle_z\t(StackInPlaneAlignment.py)"
			],
			[
				"fil",
				"filename"
			],
			[
				"Test_Stac",
				"Test_StackInPlaneAlignment\t(Test_StackInPlaneAlignment.py)"
			],
			[
				"index",
				"index[-1"
			],
			[
				"get_aff",
				"get_affine_transformations"
			],
			[
				"af",
				"affine"
			],
			[
				"stack_al",
				"stack_aligned"
			],
			[
				"as",
				"astype"
			],
			[
				"affine",
				"affine_transforms"
			],
			[
				"affin",
				"affine_transforms"
			],
			[
				"trans",
				"translation"
			],
			[
				"get_comp",
				"get_composite_sitk_affine_transform"
			],
			[
				"Affin",
				"AffineTransform"
			],
			[
				"rigid_re",
				"rigid_registration_transform_2D_sitk"
			],
			[
				"tra",
				"translation"
			],
			[
				"Eule",
				"Euler2DTransform\tclass"
			],
			[
				"down",
				"downsampling_factor"
			],
			[
				"transformation",
				"transformation_sitk"
			],
			[
				"FILE",
				"FILENAME_REF_T2"
			],
			[
				"set_tr",
				"set_centered_transform_initializer\t(registerImages.py)"
			],
			[
				"Registration",
				"RegistrationSimpleITK"
			],
			[
				"filename_ref_",
				"filename_ref_T2"
			],
			[
				"frame",
				"frame_dimension_mr_film_scan"
			],
			[
				"downsamp",
				"downsampling_factor"
			],
			[
				"HR",
				"HRvolume_init"
			],
			[
				"target",
				"target_stack_number"
			],
			[
				"HR_volume_",
				"HR_volume_ref_frame"
			],
			[
				"set_fil",
				"set_filename\t(Stack.py)"
			],
			[
				"HR_",
				"HR_volume_init"
			],
			[
				"file",
				"filenames_results"
			],
			[
				"direc",
				"directory_results"
			],
			[
				"filename_",
				"filename_reference"
			],
			[
				"director",
				"directory_reference"
			],
			[
				"filena",
				"filenames\t(preprocessFiles.py)"
			],
			[
				"get_",
				"get_filename"
			],
			[
				"HR_v",
				"HR_volume\tstatement"
			],
			[
				"show_",
				"show_sitk_image"
			],
			[
				"HR_vo",
				"HR_volume_init"
			],
			[
				"HR_volu",
				"HR_volume_init\t(reconstructVolume.py)"
			],
			[
				"run_re",
				"run_reconstruction\t(reconstructVolume.py)"
			],
			[
				"reference_i",
				"reference_image"
			],
			[
				"stack_ali",
				"stack_aligned_masked"
			],
			[
				"from",
				"from_stacks\t(foo.py)"
			],
			[
				"Stac",
				"StackManager"
			],
			[
				"slice_si",
				"slice_sitk_mask"
			],
			[
				"stack_in",
				"stack_inplane_reg"
			],
			[
				"refern",
				"reference_image"
			],
			[
				"get_r",
				"get_resampled_stack_from_slices"
			],
			[
				"inpla",
				"inplane_registration"
			],
			[
				"reference",
				"reference_image"
			],
			[
				"stack_inplane",
				"stack_inplaneSimilar"
			],
			[
				"ref",
				"reference"
			],
			[
				"referen",
				"reference_image_resampled"
			],
			[
				"refer",
				"reference_image"
			],
			[
				"image_sitk",
				"image_sitk_mask\t(Stack.py)"
			],
			[
				"image_in",
				"image_inplaneSimilar_resampled_sitk"
			],
			[
				"_dir",
				"_dir_input"
			],
			[
				"upda",
				"update_motion_correction\t(Slice.py)"
			],
			[
				"get_sli",
				"get_slice_number\t(Slice.py)"
			],
			[
				"slice_2",
				"slice_2D_fixed"
			],
			[
				"_run_",
				"_run_in_plane_registration"
			],
			[
				"stack_inplane_reg",
				"stack_inplane_reg.sitk"
			],
			[
				"time",
				"timepoint"
			],
			[
				"DIR",
				"DIR_OUTPUT"
			],
			[
				"registratoin",
				"registration_transform_sitk"
			],
			[
				"refere",
				"reference_image"
			],
			[
				"dir_",
				"dir_input\t(preprocessFiles.py)"
			],
			[
				"sys",
				"system\t(preprocessFiles.py)"
			],
			[
				"DIR_IN",
				"DIR_INPUT_PREPROCESSED_DATA"
			],
			[
				"dir",
				"directory"
			],
			[
				"downs",
				"downsampling_factor"
			],
			[
				"get_f",
				"get_filename"
			],
			[
				"inpl",
				"inplane_registration"
			],
			[
				"from_s",
				"from_sitk_image"
			],
			[
				"Euler",
				"Euler3DTransform"
			],
			[
				"rigid",
				"rigid_sitk"
			],
			[
				"get_d",
				"get_downsampled_image_sitk"
			],
			[
				"euler",
				"euler_sitk"
			],
			[
				"motion",
				"motion_sitk"
			],
			[
				"motino",
				"motion_matrix"
			],
			[
				"Verso",
				"VersorRigid3DTransform\t(preprocessFiles.py)"
			],
			[
				"SetC",
				"SetComputeZYX\tfunction"
			],
			[
				"SetR",
				"SetRotation\tfunction"
			],
			[
				"_scal",
				"_scaled_registered_affine"
			],
			[
				"image_re",
				"image_resampled_sitk_rigid"
			],
			[
				"Set",
				"SetCenter\tfunction"
			],
			[
				"orign_",
				"origin_scaled"
			],
			[
				"image_ref_",
				"image_ref_scaled_sitk"
			],
			[
				"spacing_s",
				"spacing_scaled"
			],
			[
				"SetS",
				"SetSpacing\t(preprocessFiles.py)"
			],
			[
				"GetO",
				"GetOrigin\t(Stack.py)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "studies/30YearMSData/preprocessFiles.py",
			"settings":
			{
				"buffer_size": 37670,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/MyPython.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"VolumetricReconstruction",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/MyPython.sublime-build",
					""
				],
				[
					"Packages/User/SublimeREPL-python.sublime-build",
					""
				]
			],
			[
				"Packages/User/MyPython.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"DoxyDoxygen: Update Comment With Preferred Style"
			],
			[
				"doxygen ip",
				"DoxyDoxygen: Update Comment With Preferred Style"
			],
			[
				"doxy",
				"DoxyDoxygen: Update Comment With User-Selected Style (interactive)..."
			],
			[
				"interactiv",
				"DoxyDoxygen: Update Comment With User-Selected Style (interactive)..."
			],
			[
				"doxy date",
				"DoxyDoxygen: Update Comment With User-Selected Style (interactive)..."
			],
			[
				"linter",
				"SublimeLinter: Disable Linting"
			],
			[
				"lin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"upda",
				"DoxyDoxygen: Update Comment With Preferred Style"
			],
			[
				"update",
				"DoxyDoxygen: Update Comment With User-Selected Style (interactive)..."
			],
			[
				"fold all",
				"DoxyDoxygen: Unfold All Comments"
			],
			[
				"unfold",
				"Code Folding: Unfold All"
			],
			[
				"dfold",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"fold comment",
				"DoxyDoxygen: Unfold All Comments"
			],
			[
				"unfol",
				"DoxyDoxygen: Unfold All Comments"
			],
			[
				"doxy up",
				"DoxyDoxygen: Update Comment With User-Selected Style (interactive)..."
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"lint",
				"SublimeLinter: Toggle Linter"
			],
			[
				"linter to",
				"SublimeLinter: Toggle Linter"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"replpy",
				"SublimeREPL: Python"
			],
			[
				"Snippet: for",
				"Snippet: (Edited) For Loop"
			],
			[
				"Snippet: ",
				"Snippet: CDATA"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"package inst",
				"Package Control: Install Package"
			],
			[
				"package control packag",
				"Package Control: Install Package"
			],
			[
				"package control add pac",
				"Package Control: Advanced Install Package"
			],
			[
				"package con",
				"Package Control: Remove Repository"
			]
		],
		"width": 629.0
	},
	"console":
	{
		"height": 231.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/cpp/source",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies"
	],
	"file_history":
	[
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_HierarchicalSliceAlignment.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_FirstEstimateOfHRVolume.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/validation/ValidationRegistration.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/HierarchicalSliceAlignment.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/preprocessing/IntensityNormalization.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/simulateAcquisition.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/ReconstructionManager.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/main.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/FirstEstimateOfHRVolume.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/reconstructVolume.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/runStudyRegularizationParameterEstimate.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/Hip/reconstructVolume.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/Registration/registerSlices.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/Registration/simulateSlices.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/UpperGastrointestinalStudy/EvaluationUpperGIReconstructionResults.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/UpperGastrointestinalStudy/reconstructGIVolume.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base/SimpleITKHelper.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/preprocessFiles.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/Registration.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/NiftyReg.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/utilities/ReconstructionManager.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base/StackManager.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/VolumeReconstruction.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base/PSF.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/registerImages.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/SliceToVolumeRegistration.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/RegistrationSimpleITK.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/RegistrationITK.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_StackInPlaneAlignment.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/preprocessing/DataPreprocessing.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/preprocessing/BrainStripping.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base/Stack.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/base/Slice.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_Stack.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_SimulatorSliceAcqusition.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_SimpleITKHelper.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_Registration.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_NiftyReg.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_BrainStripping.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/main_UnitTests_old.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/InverseProblemSolver.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/ScatteredDataApproximation.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/StackAverage.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/AnalysisRegularizationParameterEstimator.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/TikhonovRegularizationParameterEstimator.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/TVL2RegularizationParameterEstimator.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/RegularizationParameterEstimator.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/solver/NonnegativeTikhonovSolver.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/solver/Solver.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/StackInPlaneAlignment.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/simulation/SimulatorSliceAcqusition.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/utilities/SimpleITKHelper.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/validation/ValidationReconstruction.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/modules/Test_DifferentialOperations.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/solver/TikhonovSolver.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/solver/TVL2Solver.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/foo.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/registration/InPlaneRigidRegistration copy.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/test/Test_main.py",
		"/Users/mebner/development/ITK/compileITK.sh",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/registration/InPlaneRigidRegistration.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/cpp/MyTest_Class_Functions/source/adjointOrientedGaussianInterpolateImageFilter.cpp",
		"/Users/mebner/UCL/UCL/Publications/2016_RAMBO/Presentation/slides.tex",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/showComparison.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/registration/Registration.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/SimpleITK_PhysicalCoordinates.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/Subject2/showComparison.py",
		"/Users/mebner/UCL/UCL/Publications/2016_RAMBO/Paper/results/side-by-side_comparison/subject02/showComparison_all",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/Subject2/showComparison.sh",
		"/Users/mebner/UCL/Data/30_year_old_data/Subject_2/002-30yr-AxT2.nii",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/preprocessing/FigureEventHandling.py",
		"/private/tmp/RegistrationITK/RegistrationITK_transform_002-30yr-AxT2_1year.txt.txt",
		"/private/tmp/RegistrationITK/RegistrationITK_transform_1year_002-30yr-AxT2.txt",
		"/private/tmp/RegistrationITK/RegistrationITK_transform_002-30yr-AxT2_1year.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/cpp/include/MyITKImageHelper.h",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/cpp/source/itkReg.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/cpp/source/MyITKImageHelper.cpp",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/MyImageProcessingFunctions.py",
		"/Users/mebner/UCL/Data/30_year_old_data/Subject_2/002-20yr-PD:T2.nii",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/30YearMSData/processFiles.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/FigureEventHandling.py",
		"/Users/mebner/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/mebner/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/ImageEventHandling.py",
		"/Users/mebner/UCL/UCL/Miscellaneous/2016_Royal Parks Marathon Fundraising/split_pages.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_04_ResampleImageFilter.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/Optimization.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/registration/SliceToVolumeRegistration.py",
		"/Users/mebner/development/nilearn/nilearn/decoding/fista.py",
		"/Users/mebner/development/nilearn/nilearn/decoding/tests/test_fista.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/Optimization_methods.py",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/linblur.m",
		"/Users/mebner/UCL/UCL/Courses/Inverse Problems in Imaging/LectureExamples/compare_TK0TK1.m",
		"/Users/mebner/development/nilearn/nilearn/decoding/proximal_operators.py",
		"/Users/mebner/development/nilearn/nilearn/decoding/objective_functions.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/nnls-test_TomV2.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/nnls-test_TomV.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/solver/NonnegativeTikhonovSolver.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/runStudiesRegularizationParameterEstimate.py",
		"/Users/mebner/UCL/Data/30_year_old_data/processFiles.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/validation/ValidationRegistration.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/validation/ValidationReconstruction.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/RegularizationParameterEstimation/LSMR/TV-L2-regularization_ADMM_iterations10_TK1itermax10.txt",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/InverseProblemSolver.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_BlurringOperator.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/ITK_BlurringOperator_Adjoint.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/SimpleITK_NiftyReg_FLIRT.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/SimpleITK_PlanarAlignment.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/RegularizationParameterEstimation/LSMR/TV-L2_new/TV-L2-regularization_ADMM_iterations10_TK1itermax10_20160802_162110.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/RegularizationParameterEstimation/LSMR/TV-L2_new/TV-L2-regularization_ADMM_iterations10_TK1itermax10_20160802_153047.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/RegularizationParameterEstimation/LSMR/TV-L2_new/TV-L2-regularization_ADMM_iterations10_TK1itermax10_20160802_143854.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/AnalysisRegularizationParameterEstimator.py",
		"/Users/mebner/Library/Application Support/Sublime Text 3/Packages/User/Doxy.sublime-settings",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/studies/FetalBrain/foo.py",
		"/private/tmp/RegularizationParameterEstimation/TV-L2-regularization_ADMM_iterations10_TK1itermax10_20160802_103201.txt",
		"/private/tmp/RegularizationParameterEstimation_extra/TV-L2-regularization_ADMM_iterations10_TK1itermax10_20160802_131050.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/RegularizationParameterEstimator.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/TikhonovRegularizationParameterEstimator.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/TVL2RegularizationParameterEstimator.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/RegularizationParameterEstimator copy.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/solver/TVL2Solver.py",
		"/Users/mebner/ucl/ucl/Volumetric Reconstruction/src/test.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/GettingStarted/VolumetricReconstructions/reconstructVolume.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimator/RegularizationParameterEstimator copy.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/solver/Solver.py",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/solver/TikhonovSolver.py",
		"/private/tmp/RegularizationParameterEstimation/TK1_-regularization_itermax3_20160801_174136.txt",
		"/Users/mebner/UCL/UCL/Volumetric Reconstruction/src/reconstruction/regularization_parameter_estimation/RegularizationParameterEstimation.py"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"*.py",
			"*.m",
			"*.py",
			"*.cpp",
			"*.py",
			"*.cpp",
			"",
			"*.py",
			".py",
			"",
			"*Lists.txt",
			"*txt",
			"",
			"out.txt",
			"*.txt",
			"",
			"*Lists.txt",
			"*.txt",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"import base.StackManager as sm",
			"import ValidationRegistration as vreg",
			"import ValidationReconstruction as vrec",
			"import VolumeReconstruction as vr",
			"vr",
			"import FigureEventHandling as feh",
			"import NonnegativeTikhonovSolver as nntk",
			"import AnalysisRegularizationParameterEstimator as arpe",
			"import RegistrationSimpleITK as rsitk",
			"import IntensityNormalization as inorm",
			"import RegularizationParameterEstimation as rpe",
			"import DataPreprocessing as dp",
			"import SimulatorSliceAcqusition as sa",
			"import NiftyReg as nreg",
			"import HierarchicalSliceAlignment as hsa",
			"import FirstEstimateOfHRVolume as efhrv",
			"import ReconstructionManager as rm",
			"import SliceToVolumeRegistration as s2vr",
			"import TVL2RegularizationParameterEstimator as tvl2rpe",
			"import TikhonovRegularizationParameterEstimator as tkrpe",
			"from RegularizationParameterEstimator import RegularizationParameterEstimator",
			"import TVL2Solver as tvl2",
			"from TikhonovSolver import TikhonovSolver",
			"import InverseProblemSolver as ips",
			"import DifferentialOperations as diffop",
			"from Solver import Solver",
			"from Solver import Solver\n",
			"import StackAverage as sa",
			"import Registration as myreg",
			"import Registration as myreg\n",
			"import Stack as st",
			"import PSF as psf",
			"import BrainStripping as bs",
			"import TikhonovSolver as tk",
			"import ScatteredDataApproximation as sda",
			"import StackManager as sm",
			"import Slice as sl",
			"import base.Slice as sl",
			"import Slice as sl",
			"import StackInPlaneAlignment as sipa\n",
			"import RegistrationITK as regitk",
			"import RegistrationSimpleITK as regsitk",
			"import SimpleITKHelper as sitkh",
			"stack_sitk",
			"point",
			"ten",
			"direction_fixed_image_flatten_0",
			"_run_registration_inplane_similarity_3D",
			"_run_registration_inplane_similarity",
			"get_inplane_scaled_rigidly_aligned_stack",
			"get_inplane_rigidly_aligned_stack_to_reference",
			":-1",
			"get_downsampled_image_sitk",
			"affine_transform_sitk",
			"Center",
			"rigid_registration_transform_3D_sitk",
			"center",
			"_get_3D_from_2D_rigid_transform_sitk",
			"_run_rigid_in_plane_registration_to_reference",
			"rigid_inplane_to_reference",
			"\"corrupted\" ,\"corrupted_2\" ",
			"_initializer_type",
			"scale_est",
			"registration_transforms[i].GetParameters()",
			"_scales_estimator",
			"Linear",
			"initializer_type",
			"_initializer_type",
			"use_verbose(True)",
			"use_verbose",
			"_initializer_type",
			"self._metric",
			"motion_sitk",
			"_get_list_of_3D_rigid_transforms_of_slices",
			"NearestNeighbor",
			"_get_3D_from_2D_rigid_transform_sitk",
			"_get_list_of_3D_rigid_transforms_of_slices",
			"sitkBSpline",
			"in_plane_motion_sitk",
			"stack_corruped_affine_transform_sitk",
			"motion_sitk",
			"sitk.Euler3DTransform())",
			"_simulated",
			"AffineTransform",
			"get_composite_sitk_affine_transform",
			"stack_corruped_affine_transform_sitk",
			"stack_corrupted_sitk",
			"in_plane_transform_sitk",
			"motion",
			"affine_centering",
			"in_plane_transform",
			"affine_total",
			"get_inplane_scaled_rigidly_aligned_stack",
			"affine_transforms",
			"get_inplane_scaled_rigidly_aligned_stack",
			"slice_trafo",
			"image_corrected_sitk",
			"_get_3D_from_2D_rigid_transform_sitk",
			"_affine_transformations",
			"affine_transform_sitk",
			"_affine_transformations",
			"self._affine_transformations\n",
			"get_inplane_rigidly_aligned_stack_to_reference",
			"scale_estimated",
			"sitk.Affine",
			"scale",
			"get_inplane_scaled_rigidly_aligned_stack",
			"_update_affine_transform",
			"tk",
			"=",
			"get_inplane_rigidly_aligned_stack_to_reference",
			"7",
			"filename_ref_PD",
			"filename_ref_T2",
			"regitk",
			"regsitk",
			"import RegistrationSimpleITK as regsitk\n",
			"regitk",
			"RegistrationSimpleITK",
			"append_reference_voxels_on_top",
			"HR_volume_apppended",
			"filename_ref",
			"filename_ref_T2",
			"reference_image_sitk",
			"reference_image",
			"10",
			"get_downsampled_image_sitk",
			"frame_dimension_mr_film_scans"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"import utilities.StackManager as sm",
			"import validation.ValidationRegistration as vreg",
			"import validation.ValidationReconstruction as vrec",
			"import utilities.VolumeReconstruction as vr",
			"import utilities.FigureEventHandling as feh",
			"import reconstruction.solver.NonnegativeTikhonovSolver as nntk",
			"import reconstruction.regularization_parameter_estimator.AnalysisRegularizationParameterEstimator as arpe",
			"import registration.RegistrationSimpleITK as rsitk",
			"import preprocessing.IntensityNormalization as inorm",
			"import reconstruction.regularization_parameter_estimator.RegularizationParameterEstimation as rpe",
			"import preprocessing.DataPreprocessing as dp",
			"import simulation.SimulatorSliceAcqusition as sa",
			"import registration.NiftyReg as nreg",
			"import registration.HierarchicalSliceAlignment as hsa",
			"import utilities.FirstEstimateOfHRVolume as efhrv",
			"import utilities.ReconstructionManager as rm",
			"import registration.SliceToVolumeRegistration as s2vr",
			"import reconstruction.regularization_parameter_estimator.TVL2RegularizationParameterEstimator as tvl2rpe",
			"import reconstruction.regularization_parameter_estimator.TikhonovRegularizationParameterEstimator as tkrpe",
			"from reconstruction.regularization_parameter_estimator.RegularizationParameterEstimator import RegularizationParameterEstimator",
			"import reconstruction.solver.TVL2Solver as tvl2",
			"from reconstruction.solver.TikhonovSolver import TikhonovSolver",
			"import reconstruction.InverseProblemSolver as ips",
			"import reconstruction.solver.DifferentialOperations as diffop",
			"from reconstruction.solver.Solver import Solver",
			"import reconstruction.StackAverage as sa",
			"import registration.Registration as myreg",
			"import base.Stack as st",
			"import base.PSF as psf",
			"import preprocessing.BrainStripping as bs",
			"\nimport reconstruction.solver.TikhonovSolver as tk",
			"import reconstruction.ScatteredDataApproximation as sda",
			"import base.StackManager as sm",
			"import base.Slice as sl",
			"import registration.StackInPlaneAlignment as sipa",
			"import registration.RegistrationSimpleITK as regitk",
			"import registration.RegistrationSimpleITK as regsitk",
			"import utilities.SimpleITKHelper as sitkh",
			"Only use signifcant digits for string",
			"composite",
			" ##---",
			"ADMM_iterations_output_dir",
			"ADMM_iterations_output_rel_dir",
			"SRR_iter_max",
			"initialTransform",
			"print_sitk_transform",
			"boundary",
			"print(\"\\t\\tSimpleITK Image Registration Method:\")",
			"get_sitk_image_direction_from_sitk_affine_transform",
			"from_filename",
			"withRestarts=False",
			"# registration_method.SetOptimizerScalesFromPhysicalShift()\n        registration_method.SetOptimizerScalesFromJacobian()",
			"registration_method.SetOptimizerAsLBFGSB(gradientConvergenceTolerance=1e-5, maximumNumberOfIterations=500, maximumNumberOfCorrections=5, maximumNumberOfFunctionEvaluations=200, costFunctionConvergenceFactor=1e+7)",
			"show(",
			"display",
			"write",
			"display_stack",
			"\\author Michael Ebner (michael.ebner.14@ucl.ac.uk)",
			"#  \\author Michael Ebner (michael.ebner.14@ucl.ac.uk)",
			"#  \\author Michael Ebner michael.ebner.14@ucl.ac.uk",
			"sl.Slice",
			"st.Stack",
			"import Stack as st",
			"import Slice as sl",
			"from_nifti",
			"stack.Stack.from_file",
			"SliceStack",
			"",
			"mebner",
			"${mask1}",
			"${mask3}",
			"${mask2}",
			"${mask3}",
			"${mask2}",
			"mask01",
			"${ana3}",
			"${ana2}",
			"${ana1}",
			"SurfaceBased",
			"dFRE",
			"FRE",
			"dFRE",
			"PointBasedTrafo2",
			"computeRegistration",
			"mx",
			"**",
			"SurfaceBasedTrafo",
			"mx",
			"dMSE",
			"SurfaceBasedTrafo"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "studies/30YearMSData/preprocessFiles.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37670,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										17669,
										17669
									],
									[
										32378,
										32378
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								784,
								784
							]
						],
						"settings":
						{
							"auto_complete": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 287.0
	},
	"output.find_results":
	{
		"height": 378.0
	},
	"pinned_build_system": "Packages/User/MyPython.sublime-build",
	"project": "VolumetricReconstruction.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"registrationi",
				"src/registration/RegistrationITK.py"
			],
			[
				"regi",
				"src/registration/RegistrationSimpleITK.py"
			],
			[
				"registrations",
				"src/registration/RegistrationSimpleITK.py"
			],
			[
				"simpl",
				"src/base/SimpleITKHelper.py"
			],
			[
				"processfiles",
				"studies/30YearMSData/preprocessFiles.py"
			],
			[
				"helper",
				"src/base/SimpleITKHelper.py"
			],
			[
				"slice",
				"src/base/Slice.py"
			],
			[
				"stackin",
				"src/registration/StackInPlaneAlignment.py"
			],
			[
				"dat",
				"src/preprocessing/DataPreprocessing.py"
			],
			[
				"test_adj",
				"GettingStarted/cpp/MyTest_Class_Functions/source/adjointOrientedGaussianInterpolateImageFilter.cpp"
			],
			[
				"regu",
				"src/reconstruction/regularization_parameter_estimator/RegularizationParameterEstimator.py"
			],
			[
				"tvl2",
				"src/reconstruction/solver/TVL2Solver.py"
			],
			[
				"solver",
				"src/reconstruction/solver/Solver.py"
			],
			[
				"tikho",
				"src/reconstruction/solver/TikhonovSolver.py"
			],
			[
				"sta",
				"src/base/Stack.py"
			],
			[
				"stac",
				"src/base/Stack.py"
			],
			[
				"sda",
				"src/reconstruction/ScatteredDataApproximation.py"
			],
			[
				"reconstru",
				"studies/FetalBrain/reconstructVolume.py"
			],
			[
				"data",
				"src/preprocessing/DataPreprocessing.py"
			],
			[
				"registration",
				"src/registration/RegistrationSimpleITK.py"
			],
			[
				"phy",
				"GettingStarted/SimpleITK_PhysicalCoordinates.py"
			],
			[
				"simp",
				"src/base/SimpleITKHelper.py"
			],
			[
				"regis",
				"src/registration/RegistrationITK.py"
			],
			[
				"registratio",
				"src/registration/RegistrationSimpleITK.py"
			],
			[
				"itkr",
				"cpp/source/itkReg.cpp"
			],
			[
				"my",
				"cpp/include/MyITKImageHelper.h"
			],
			[
				"myit",
				"cpp/source/MyITKImageHelper.cpp"
			],
			[
				"simulate",
				"studies/Registration/simulateSlices.py"
			],
			[
				"test_r",
				"test/modules/Test_Registration.py"
			],
			[
				"test_si",
				"test/modules/Test_SimpleITKHelper.py"
			],
			[
				"sli",
				"src/base/Slice.py"
			],
			[
				"stack",
				"src/base/Stack.py"
			],
			[
				"physi",
				"GettingStarted/SimpleITK_PhysicalCoordinates.py"
			],
			[
				"registrat",
				"src/registration/RegistrationSimpleITK.py"
			],
			[
				"stackm",
				"src/base/StackManager.py"
			],
			[
				"datap",
				"src/preprocessing/DataPreprocessing.py"
			],
			[
				"inten",
				"src/preprocessing/IntensityNormalization.py"
			],
			[
				"vali",
				"src/validation/ValidationRegistration.py"
			],
			[
				"helper.py",
				"src/base/SimpleITKHelper.py"
			],
			[
				"si",
				"src/base/SimpleITKHelper.py"
			],
			[
				"tomv",
				"GettingStarted/nnls-test_TomV.py"
			],
			[
				"study",
				"studies/FetalBrain/runStudyRegularizationParameterEstimate.py"
			],
			[
				"runstu",
				"studies/FetalBrain/runStudyRegularizationParameterEstimate.py"
			],
			[
				"solv",
				"src/reconstruction/solver/Solver.py"
			],
			[
				"simu",
				"src/simulateAcquisition.py"
			],
			[
				"simul",
				"src/simulation/SimulatorSliceAcqusition.py"
			],
			[
				"regul",
				"src/reconstruction/RegularizationParameterEstimation.py"
			],
			[
				"psf",
				"src/base/PSF.py"
			],
			[
				"sol",
				"src/reconstruction/solver/Solver.py"
			],
			[
				"opt",
				"GettingStarted/Optimization.py"
			],
			[
				"slic",
				"src/base/Slice.py"
			],
			[
				"simpleitkhe",
				"src/base/SimpleITKHelper.py"
			],
			[
				"simpleitkhel",
				"src/base/SimpleITKHelper.py"
			],
			[
				"first",
				"src/FirstEstimateOfHRVolume.py"
			],
			[
				"scatt",
				"src/reconstruction/ScatteredDataApproximation.py"
			],
			[
				"da",
				"src/DataPreprocessing.py"
			],
			[
				"main",
				"src/main.py"
			],
			[
				"",
				"src/RegularizationParameterEstimation.py"
			],
			[
				"inver",
				"src/InverseProblemSolver.py"
			],
			[
				"itkre",
				"cpp/source/itkReg.cpp"
			],
			[
				"reconstruc",
				"studies/UpperGastrointestinalStudy/reconstructGIVolume.py"
			],
			[
				"inve",
				"src/InverseProblemSolver.py"
			],
			[
				"reg",
				"src/RegistrationSimpleITK.py"
			],
			[
				"bias",
				"cpp/source/runN4BiasFieldCorrectionImageFilter.cpp"
			],
			[
				"reconsgi",
				"studies/UpperGastrointestinalStudy/reconstructGIVolume.py"
			],
			[
				"myitkim",
				"cpp/include/MyITKImageHelper.h"
			],
			[
				"intens",
				"src/IntensityNormalization.py"
			],
			[
				"myitk",
				"cpp/source/MyITKImageHelper.cpp"
			],
			[
				"read",
				"cpp/source/readCommandLine.cpp"
			],
			[
				"d",
				"src/DataPreprocessing.py"
			],
			[
				"myi",
				"cpp/source/MyITKImageHelper.cpp"
			],
			[
				"itkhelper",
				"cpp/source/MyITKImageHelper.cpp"
			],
			[
				"inte",
				"src/IntensityNormalization.py"
			],
			[
				"valida",
				"studies/ValidationRegistration.py"
			],
			[
				"estimation",
				"src/RegularizationParameterEstimation.py"
			],
			[
				"reconstructgi",
				"studies/UpperGastrointestinalStudy/reconstructGIVolume.py"
			],
			[
				"datapre",
				"src/DataPreprocessing.py"
			],
			[
				"recon",
				"studies/reconstructVolume.py"
			],
			[
				"stackman",
				"src/StackManager.py"
			],
			[
				"valid",
				"studies/ValidationRegistration.py"
			],
			[
				"normali",
				"src/IntensityNormalization.py"
			],
			[
				"registra",
				"src/RegistrationSimpleITK.py"
			],
			[
				"reconstrucgi",
				"studies/UpperGastrointestinalStudy/reconstructGIVolume.py"
			],
			[
				"reconstructv",
				"studies/reconstructVolume.py"
			],
			[
				"registrationsi",
				"src/RegistrationSimpleITK.py"
			],
			[
				"validatio",
				"studies/ValidationRegistration.py"
			],
			[
				"va",
				"studies/ValidationReconstruction.py"
			],
			[
				"stacka",
				"src/StackAverage.py"
			],
			[
				"datep",
				"src/DataPreprocessing.py"
			],
			[
				"runn",
				"cpp/source/runN4BiasFieldCorrectionImageFilter.cpp"
			],
			[
				"run",
				"cpp/build/bin/runN4BiasFieldCorrectionImageFilter"
			],
			[
				"itk",
				"cpp/source/itkReg.cpp"
			],
			[
				"reconstructg",
				"studies/UpperGastrointestinalStudy/reconstructGIVolume.py"
			],
			[
				"sim",
				"src/SimpleITKHelper.py"
			],
			[
				"itk_",
				"GettingStarted/ITK_Registration.py"
			],
			[
				"inv",
				"src/InverseProblemSolver.py"
			],
			[
				"nifty",
				"src/NiftyReg.py"
			],
			[
				"radcom",
				"cpp/source/readCommandLine.cpp"
			],
			[
				"rea",
				"cpp/include/readCommandLine.h"
			],
			[
				"itkri",
				"cpp/source/itkRigidReg.cpp"
			],
			[
				"readcomm",
				"cpp/include/readCommandLine.h"
			],
			[
				"itkreg",
				"cpp/source/itkReg.cpp"
			],
			[
				"ave",
				"src/StackAverage.py"
			],
			[
				"sliceto",
				"src/SliceToVolumeRegistration.py"
			],
			[
				"regisimpleitk",
				"src/RegistrationSimpleITK.py"
			],
			[
				"itkrigi",
				"cpp/source/itkRigidReg.cpp"
			],
			[
				"slicet",
				"src/SliceToVolumeRegistration.py"
			],
			[
				"testn",
				"test/modules/Test_NiftyReg.py"
			],
			[
				"test_ni",
				"test/modules/Test_NiftyReg.py"
			],
			[
				"test",
				"test/Test_main.py"
			],
			[
				"regular",
				"src/RegularizationParameterEstimation.py"
			],
			[
				"recons",
				"studies/reconstructVolume.py"
			],
			[
				"test_s",
				"test/modules/Test_SimpleITKHelper.py"
			],
			[
				"invers",
				"src/InverseProblemSolver.py"
			],
			[
				"volu",
				"src/VolumeReconstruction.py"
			],
			[
				"test_n",
				"test/modules/Test_NiftyReg.py"
			],
			[
				"stackmana",
				"src/StackManager.py"
			],
			[
				"test_m",
				"test/Test_main.py"
			],
			[
				"hie",
				"src/HierarchicalSliceAlignment.py"
			],
			[
				"hier",
				"src/HierarchicalSliceAlignment.py"
			],
			[
				"reconstuct",
				"GettingStarted/ITK_ReconstructVolume.py"
			],
			[
				"itk_reconstructvolume",
				"GettingStarted/ITK_ReconstructVolume.py"
			],
			[
				"inverse",
				"src/InverseProblemSolver.py"
			],
			[
				"itk_rec",
				"GettingStarted/ITK_ReconstructVolume.py"
			],
			[
				"opti",
				"GettingStarted/Optimization.py"
			],
			[
				"test_",
				"test/Test_main.py"
			],
			[
				"simpletransformix.h",
				"SimpleElastix/Code/Elastix/include/sitkSimpleTransformix.h"
			],
			[
				"hi",
				"src/HierarchicalSliceAlignment.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 648.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 285.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
